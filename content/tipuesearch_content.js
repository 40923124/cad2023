var tipuesearch = {"pages": [{'title': 'About', 'text': ' https://github.com/mdecycu/cmsite  \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n \n  導入 brython 程式庫  \n \n \n \n \n \n  啟動 Brython  \n \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n', 'tags': '', 'url': 'Brython.html'}, {'title': '評分項目', 'text': '倉儲與網站評分項目: \n (X)A: 是否按 照進度明確標示倉儲的改版歷程 \n (O)B: 是否根據 \xa0 IPv4 與 IPv6 \xa0 網路環境設定進行作法討論 \n (O)C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作 \n (O)D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考 \n (O)E: 是否使用所分配的 CAD 套件完成 專案一零組件繪圖 , 並提供零組件下載 \n (O)F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim \n (O)G: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬 \n (O)H: 是否實際操作 \xa0 Triangle 軌道系統 的鋼球永動模擬 \n (O)I: 是否完成 W15 的平面雙 U 迴路上的 鋼球永動系統繪圖、轉檔與系統模擬 \n (O)J: 是否使用所分配的 CAD 套件完成 專案二 1D 平台零組件繪圖 , 並提供零組件下載 \n (O)K: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬 \n (X)L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 \xa0 PID 控制理論 進行資料收集與 ChatGPT 對答', 'tags': '', 'url': '評分項目.html'}, {'title': '循環繞圈運動系統', 'text': '', 'tags': '', 'url': '循環繞圈運動系統.html'}, {'title': '設計繪圖', 'text': '\n', 'tags': '', 'url': '設計繪圖.html'}, {'title': '網路設定', 'text': '進入課程網頁的網路設定網站下載資料 \n \n 下載以下圈起來的壓縮檔並解壓縮即開啟班級名單序號之網頁 \n \n 下載完後開啟資料夾 \n \n 修改各資料裡的程式，程式碼在網路設定之網站 \n \n \n 修改IPv6之位址，序號在學生名單序號之網頁下方 \n \n 修改完成後，先點開第1個登錄檔，再打開第2個批次檔，網路即可變為IPv6，並關閉IPv4 \n \n \n', 'tags': '', 'url': '網路設定.html'}, {'title': '作業一', 'text': '零件建模 \n \n 底座 \n \n 圓盤 \n \n 支撐柱 \n \n 軌道 \n \n 鋼珠 \n \n 組合圖 \n \n 各零件檔案 \n \n 匯入CollpeliaSimEdu \n \n 加入球體，移動到適當位置 \n \n 加入sensor \n \n 移動到適當位置 \n \n 將球體及sensor名稱 \n \n 打開sensor勾此選項 \n \n 打開球體啟動此三個選項 \n \n 將匯入的模型開啟Body is respondable(碰撞箱) \n \n videos \n', 'tags': '', 'url': '作業一.html'}, {'title': '作業二', 'text': '基本零件繪製 \n 檔案下載 \n 軌道 \n \n 底座 \n \n 組合圖 \n \n 輸入 CoppeliaSim \n \n \xa0 \n \n 啟動程式，透過程式將 CoppeliaSim開始動作 \n \n \n \n \n \n \n \n CoppeliaSimEdu Videos \n \n CoppeliaSimEdu ipv6 Videos \n', 'tags': '', 'url': '作業二.html'}]};